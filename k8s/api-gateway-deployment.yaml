apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        # Replace 'your-dockerhub-username/api-gateway:latest' with your actual image name
        # Or just 'api-gateway:latest' if building directly into Minikube's Docker daemon
        image: api-gateway:latest
        imagePullPolicy: IfNotPresent # Or 'Always' if pulling from a remote registry
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        ports:
        - containerPort: 9000 # Port the application listens on inside the container (Updated)
        env:
        # Environment variables for Spring Cloud Gateway route definitions (Updated URIs)
        # Adjust these based on your actual gateway configuration (application.yml/properties)
        - name: SPRING_CLOUD_GATEWAY_ROUTES_0_ID
          value: player-service-route
        - name: SPRING_CLOUD_GATEWAY_ROUTES_0_URI
          value: http://player-service:8081 # Route requests to player-service (Updated Port)
        - name: SPRING_CLOUD_GATEWAY_ROUTES_0_PREDICATES_0
          value: Path=/api/players/** # Match requests starting with /api/players/
        - name: SPRING_CLOUD_GATEWAY_ROUTES_1_ID
          value: session-service-route
        - name: SPRING_CLOUD_GATEWAY_ROUTES_1_URI
          value: http://session-service:8080 # Route requests to session-service (Port is correct)
        - name: SPRING_CLOUD_GATEWAY_ROUTES_1_PREDICATES_0
          value: Path=/api/sessions/** # Match requests starting with /api/sessions/
        - name: SPRING_CLOUD_GATEWAY_ROUTES_2_ID
          value: participant-service-route
        - name: SPRING_CLOUD_GATEWAY_ROUTES_2_URI
          value: http://participant-service:8082 # Route requests to participant-service (Updated Port)
        - name: SPRING_CLOUD_GATEWAY_ROUTES_2_PREDICATES_0
          value: Path=/api/participants/** # Match requests starting with /api/participants/
        # Add other necessary environment variables (e.g., Eureka, database if needed by gateway itself)
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  labels:
    app: api-gateway
spec:
  selector:
    app: api-gateway # Selects pods managed by the api-gateway-deployment
  ports:
  - protocol: TCP
    port: 80       # Port the service listens on within the cluster
    targetPort: 9000 # Port the container listens on (must match containerPort above) (Updated)
    nodePort: 30090 # Specify a fixed NodePort (Updated)
                     # If omitted, Kubernetes assigns a random one.
  type: NodePort     # Exposes the service on each Node's IP at a static port (the NodePort)
                     # Makes the service accessible from outside the cluster via <NodeIP>:<NodePort>